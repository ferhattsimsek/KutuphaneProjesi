// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kutup.Data;

#nullable disable

namespace kutup.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240116143810_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("KategoriKitap", b =>
                {
                    b.Property<int>("KategorilerKategoriId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KitaplarISBN")
                        .HasColumnType("INTEGER");

                    b.HasKey("KategorilerKategoriId", "KitaplarISBN");

                    b.HasIndex("KitaplarISBN");

                    b.ToTable("KategoriKitap");
                });

            modelBuilder.Entity("KitapYazar", b =>
                {
                    b.Property<int>("KitaplarISBN")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YazarlarYazarId")
                        .HasColumnType("INTEGER");

                    b.HasKey("KitaplarISBN", "YazarlarYazarId");

                    b.HasIndex("YazarlarYazarId");

                    b.ToTable("KitapYazar");
                });

            modelBuilder.Entity("kutup.Data.Emanet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AlisTarihi")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GetirdiğiTarih")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GetirecegiTarih")
                        .HasColumnType("TEXT");

                    b.Property<int>("KalanGünSayısı")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KitapId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("getirdimi")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KitapId");

                    b.HasIndex("KullanıcıId");

                    b.ToTable("Emanetler");
                });

            modelBuilder.Entity("kutup.Data.Kategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("KategoriAdi")
                        .HasColumnType("TEXT");

                    b.HasKey("KategoriId");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("kutup.Data.Kitap", b =>
                {
                    b.Property<int>("ISBN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Adet")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hakkında")
                        .HasColumnType("TEXT");

                    b.Property<string>("KitapAdi")
                        .HasColumnType("TEXT");

                    b.HasKey("ISBN");

                    b.ToTable("Kitaplar");
                });

            modelBuilder.Entity("kutup.Data.Kullanıcı", b =>
                {
                    b.Property<int>("KullanıcıId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tel")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserLastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("KullanıcıId");

                    b.ToTable("Kullanıcılar");
                });

            modelBuilder.Entity("kutup.Data.Yazar", b =>
                {
                    b.Property<int>("YazarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("YazarAdi")
                        .HasColumnType("TEXT");

                    b.Property<string>("YazarSoyadi")
                        .HasColumnType("TEXT");

                    b.HasKey("YazarId");

                    b.ToTable("Yazarlar");
                });

            modelBuilder.Entity("kutup.Data.Yorum", b =>
                {
                    b.Property<int>("YorumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("KitapISBN")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KullanıcıId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PublishedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("YorumId");

                    b.HasIndex("KitapISBN");

                    b.HasIndex("KullanıcıId");

                    b.ToTable("Yorumlar");
                });

            modelBuilder.Entity("KategoriKitap", b =>
                {
                    b.HasOne("kutup.Data.Kategori", null)
                        .WithMany()
                        .HasForeignKey("KategorilerKategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kutup.Data.Kitap", null)
                        .WithMany()
                        .HasForeignKey("KitaplarISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KitapYazar", b =>
                {
                    b.HasOne("kutup.Data.Kitap", null)
                        .WithMany()
                        .HasForeignKey("KitaplarISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kutup.Data.Yazar", null)
                        .WithMany()
                        .HasForeignKey("YazarlarYazarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("kutup.Data.Emanet", b =>
                {
                    b.HasOne("kutup.Data.Kitap", "kitap")
                        .WithMany()
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kutup.Data.Kullanıcı", "kullanıcı")
                        .WithMany("Emanetler")
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("kitap");

                    b.Navigation("kullanıcı");
                });

            modelBuilder.Entity("kutup.Data.Yorum", b =>
                {
                    b.HasOne("kutup.Data.Kitap", "Kitap")
                        .WithMany("Yorumlar")
                        .HasForeignKey("KitapISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("kutup.Data.Kullanıcı", "Kullanıcı")
                        .WithMany("Yorumlar")
                        .HasForeignKey("KullanıcıId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("Kullanıcı");
                });

            modelBuilder.Entity("kutup.Data.Kitap", b =>
                {
                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("kutup.Data.Kullanıcı", b =>
                {
                    b.Navigation("Emanetler");

                    b.Navigation("Yorumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
